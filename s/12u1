import opt
import random

#上半场坦克设置
#0为防守，1为攻击，2为碰运气，3为蹲守
TANK1 = 1
TANK2 = 1
TANK3 = 1
TANK4 = 0
TANK5 = 3

#下半场坦克设置
TANK6 = 1
TANK7 = 1
TANK8 = 1
TANK9 = 1
TANK10 = 3

#不要动 不然输了我不负责
r1 = random.randint(0,1)
r2 = random.randint(0,1)
r3 = random.randint(0,1)
r4 = random.randint(0,1)
r5 = random.randint(0,1)

def tank1_update():
    global TANK1,TANK6
    if opt.remaining_time() >= 90:
        if TANK1 == 0:
            return defence()
        elif TANK1 == 1:
            return attack()
        elif TANK1 == 3:
            return attackTo()
        else:
            if r1 == 1:
                return attack()
            else:
                return defence()
    else:
        if TANK6 == 0:
            return defence()
        elif TANK6 == 1:
            return attack()
        elif TANK6 == 3:
            return attackTo()
        else:
            if r1 == 1:
                return attack()
            else:
                return defence()

def tank2_update():
    global TANK2,TANK7
    if opt.remaining_time() >= 90:
        if TANK2 == 0:
            return defence()
        elif TANK2 == 1:
            return attack()
        elif TANK2 == 3:
            return attackTo()
        else:
            if r2 == 1:
                return attack()
            else:
                return defence()
    else:
        if TANK7 == 0:
            return defence()
        elif TANK7 == 1:
            return attack()
        elif TANK7 == 3:
            return attackTo()
        else:
            if r2 == 1:
                return attack()
            else:
                return defence()


def tank3_update():
    global TANK3,TANK8
    if opt.remaining_time() >= 90:
        if TANK3 == 0:
            return defence()
        elif TANK3 == 1:
            return attack()
        elif TANK3 == 3:
            return attackTo()
        else:
            if r3 == 1:
                return attack()
            else:
                return defence()
    else:
        if TANK8 == 0:
            return defence()
        elif TANK8 == 1:
            return attack()
        elif TANK8 == 3:
            return attackTo()
        else:
            if r3 == 1:
                return attack()
            else:
                return defence()


def tank4_update():
    global TANK4,TANK9
    if opt.remaining_time() >= 90:
        if TANK4 == 0:
            return defence()
        elif TANK4 == 1:
            return attack()
        elif TANK4 == 3:
            return attackTo()
        else:
            if r4 == 1:
                return attack()
            else:
                return defence()
    else:
        if TANK9 == 0:
            return defence()
        elif TANK9 == 1:
            return attack()
        elif TANK9 == 3:
            return attackTo()
        else:
            if r4 == 1:
                return attack()
            else:
                return defence()

def tank5_update():
    global TANK5,TANK10
    if opt.remaining_time() >= 90:
        if TANK5 == 0:
            return defence()
        elif TANK5 == 1:
            return attack()
        elif TANK5 == 3:
            return attackTo()
        else:
            if r5 == 1:
                return attack()
            else:
                return defence()
    else:
        if TANK10 == 0:
            return defence()
        elif TANK10 == 1:
            return attack()
        elif TANK10 == 3:
            return attackTo()
        else:
            if r1 == 1:
                return attack()
            else:
                return defence()


# 定义机器人attack( )进攻策略的方法
def attack():
    vs, hs = move_to(opt.BALL.x,opt.BALL.y)
    angle_ball = opt.TANK.angle_to(opt.BALL.x,opt.BALL.y)
    if opt.TANK.cool_remain == 0:
        if angle_ball > 0 and angle_ball < 4:
            opt.TANK.do_fire()
        if angle_ball > 356 and angle_ball < 360:
            opt.TANK.do_fire()
    
    # 当attack()被tank_update()调用时，每一帧都会执行以上策略，并返回vs,hs值
    return vs, hs


# 定义机器人defence( )防守策略的方法
def defence():
    vs, hs = 0, 0
    # 如果足球的x坐标小于-40，进入防守范围，机器人追击足球
    if opt.BALL.x < -40:
        ball_x = opt.BALL.x
        ball_y = opt.BALL.y
        return move_to(opt.BALL.x,opt.BALL.y)
    # 否则，超出防守范围，机器人驶向并停在（-48,0）坐标附近
    else:
        if opt.TANK.is_point_in_range(-48, 0, 2):
            vs, hs = 0, 0
        else:
            angle = opt.TANK.angle_to(-48, 0)
            if angle > 0 and angle <= 90:
                vs, hs = 0.8, -0.3
            elif angle > 90 and angle <= 180:
                vs, hs = -0.8, -0.3
            elif angle > 180 and angle <= 270:
                vs, hs = -0.8, 0.3
            elif angle > 270 and angle <= 360:
                vs, hs = 0.8, 0.3
    #----------------------------------------------
    angle_ball = opt.TANK.angle_to(opt.BALL.x,opt.BALL.y)
    if opt.TANK.cool_remain == 0:
        if angle_ball > 0 and angle_ball < 4:
            opt.TANK.do_fire()
        if angle_ball > 356 and angle_ball < 360:
            opt.TANK.do_fire()
    
    return vs,hs

def attackTo():
    vs,hs = 0,0
    angle = opt.TANK.angle_to(40,0)
    if opt.TANK.is_point_in_range(40,0,2):
        if (0 <= opt.TANK.angle_to(opt.BALL.x,opt.BALL.y) <  40) or (320 <= opt.TANK.angle_to(opt.BALL.x,opt.BALL.y) <  360):
            return 0.6,0
        else:
            return 0.1,-0.5
    else:
            if 0 < angle <= 45:
                vs, hs = 1, -0.3
            elif 45 < angle <= 90:
                vs, hs = 0.3, -1
            elif 90 < angle <= 135:
                vs, hs = -0.3, -1
            elif 135 < angle <= 180:
                vs, hs = -1, -0.3
            elif 180 < angle <= 225:
                vs, hs = -1, 0.3
            elif 225 < angle <= 270:
                vs, hs = -0.6, 0.9
            elif 270 < angle <= 315:
                vs, hs = 0.6, 0.9
            elif 315 < angle <= 360:
                vs, hs = 0.9, 0.6
            return vs,hs

def move_to(tx, ty):
    angle = opt.TANK.angle_to(tx, ty)
    vs, hs = 0, 0
    if 0 < angle <= 45:
        vs, hs = 0.9, -0.6
    elif 45 < angle <= 90:
        vs, hs = 0.6, -0.9
    elif 90 < angle <= 135:
        vs, hs = -0.6, -0.9
    elif 135 < angle <= 180:
        vs, hs = -0.9, -0.6
    elif 180 < angle <= 225:
        vs, hs = -0.9, 0.6
    elif 225 < angle <= 270:
        vs, hs = -0.6, 0.9
    elif 270 < angle <= 315:
        vs, hs = 0.6, 0.9
    elif 315 < angle <= 360:
        vs, hs = 0.9, 0.6
    return vs, hs
